(window.deskappJsonp=window.deskappJsonp||[]).push([[38],{1303:function(n,e){n.exports=function(n){function e(n){"undefined"!=typeof console&&(console.error||console.log)("[Script Loader]",n)}try{"undefined"!=typeof execScript&&"undefined"!=typeof attachEvent&&"undefined"==typeof addEventListener?execScript(n):"undefined"!=typeof eval?eval.call(null,n):e("EvalError: No eval function available")}catch(n){e(n)}}},1781:function(n,e){n.exports="//$Id: $\n/* eslint-disable */\nvar _acsop = /opera|opera 5|opera\\/5/i.test(navigator.userAgent);\nvar _acsie = !_acsop && /msie/i.test(navigator.userAgent);\nvar _acsextn = '.acs'; //Will be changed during build time\nvar _acscontext = '/support'; //Will be changed during build time\n\nvar AcsApi = {};\nvar AcsCallBack = {};\nif (AcsResource == undefined) {\n  var AcsResource = {};\n}\n\nAcsApi.isMobile = function() {\n  try {\n    if (navigator && navigator.userAgent) {\n      return (\n        navigator.userAgent.match(/iphone|ipod|iphone/i) ||\n        navigator.userAgent.match(/Android/i)\n      );\n    }\n  } catch (e) {\n    return false;\n  }\n};\nAcsApi.init = function(prd, csrfParam, csrfCookieName) {\n  AcsApi.renderProgressive = true;\n  AcsApi.viewlist = new Object();\n  AcsResource.init();\n  AcsApi.prd = prd;\n  AcsApi.csrfParam = csrfParam;\n  AcsApi.csrfCookieName = csrfCookieName;\n  if (AcsApi.isMobile()) {\n    AcsApi.renderProgressive = false;\n  }\n  //AcsApi.ckey = WebMessanger.getPrd()+\"_DNFY\";\n};\nAcsApi.getCSRF = function() {\n  return (\n    AcsApi.csrfParam +\n    '=' +\n    AcsUtil.Cookie.getCustomCookie(AcsApi.csrfCookieName)\n  );\n};\nAcsApi.getCkey = function() {\n  if (AcsApi.ckey != undefined) {\n    return AcsApi.ckey;\n  }\n  if (AcsUtil.getPrd() != undefined) {\n    AcsApi.ckey = AcsUtil.getPrd() + '_DNFY';\n  }\n  return AcsApi.ckey;\n};\n\nAcsApi.handleServerUP = function() {\n  //console.log(\"Server Reconnected - Syncing feeds\");\n  if (AcsDesktopNotification.isOwner()) {\n    AcsDesktopNotification.setOwnerCookie(\n      AcsApi.getCkey(),\n      AcsUtil.getRawSid(),\n      10000\n    ); //force update ownersid, if existing owner\n  }\n  for (viewKey in AcsApi.viewlist) {\n    //console.log(\"AutoCorrecting \"+viewKey);\n    AcsApi.autoCorrect(viewKey);\n  }\n\n  try {\n    window[AcsApi.prd].onAcsConnect();\n  } catch (e) {}\n  //AcsApi.getBadgeCount(\"UNS\");\n\n  //AcsApi.getCrossProductBadgeCount();\n};\n\nAcsApi.handleServerDown = function() {\n  try {\n    window[AcsApi.prd].onAcsDisconnect();\n  } catch (e) {}\n};\n\nAcsApi.initStream = function(prd, viewkey, count) {\n  //console.log(\"viewkey=\"+viewkey);\n  var params = 'viewkey=' + encodeURIComponent(viewkey);\n  var att = { viewkey: viewkey, prd: prd };\n  if (count != undefined) {\n    params = params + '&count=' + count;\n  }\n\n  if (AcsApi.renderProgressive) {\n    params = params + '&progressive=true';\n    AcsConnect.httpProgressive(\n      'initprogressivestream',\n      _acscontext + '/viewdata' + _acsextn,\n      params,\n      att\n    );\n  } else {\n    AcsConnect.httpPost(\n      'initstream',\n      _acscontext + '/viewdata' + _acsextn,\n      params,\n      att\n    );\n  }\n};\n\nAcsApi.getComments = function(viewkey, skey, fdk, cmore, count, satt) {\n  var params =\n    'viewkey=' +\n    encodeURIComponent(viewkey) +\n    '&skey=' +\n    encodeURIComponent(skey) +\n    '&fdk=' +\n    encodeURIComponent(fdk) +\n    '&cmore=' +\n    encodeURIComponent(cmore);\n  var att = {\n    viewkey: viewkey,\n    skey: skey,\n    fdk: fdk,\n    cmore: cmore,\n    satt: satt\n  };\n  if (count != undefined) {\n    params = params + '&count=' + count;\n  }\n  AcsConnect.httpPost(\n    'getcomments',\n    _acscontext + '/getcomment' + _acsextn,\n    params,\n    att\n  );\n};\n\nAcsApi.showMore = function(prd, viewkey, count) {\n  if (AcsApi.viewlist[viewkey] == undefined) {\n    throw new Error('ViewKey not initialized, Call initStream');\n  }\n  var morekey = AcsApi.viewlist[viewkey]['morekey'];\n  if (morekey == undefined) {\n    throw new Error('No data available in the server for this view Key');\n  }\n  var params =\n    'viewkey=' +\n    encodeURIComponent(viewkey) +\n    '&morekey=' +\n    encodeURIComponent(morekey);\n  if (count != undefined) {\n    params = params + '&count=' + count;\n  }\n  var att = { viewkey: viewkey, prd: prd };\n\n  if (AcsApi.renderProgressive) {\n    params = params + '&progressive=true';\n    AcsConnect.httpProgressive(\n      'showmoreprogressive',\n      _acscontext + '/smdata' + _acsextn,\n      params,\n      att\n    );\n  } else {\n    AcsConnect.httpPost(\n      'showmore',\n      _acscontext + '/smdata' + _acsextn,\n      params,\n      att\n    );\n  }\n};\n\nAcsApi.isMoreAvailable = function(viewkey) {\n  try {\n    return AcsApi.viewlist[viewkey]['morekey'] != undefined;\n  } catch (e) {\n    return true;\n  }\n};\n\nAcsApi.autoCorrect = function(viewkey) {\n  if (viewkey == undefined) {\n    return;\n  }\n  var skey = AcsApi.viewlist[viewkey]['skey'];\n  if (skey == undefined) {\n    return;\n  }\n  var count = 25;\n  var params =\n    'viewkey=' +\n    encodeURIComponent(viewkey) +\n    '&skey=' +\n    encodeURIComponent(skey) +\n    '&count=' +\n    count;\n  var prd = AcsApi.viewlist[viewkey]['prd'];\n  var att = { viewkey: viewkey, prd: prd };\n  AcsConnect.httpPost(\n    'autocorrect',\n    _acscontext + '/autocorrect' + _acsextn,\n    params,\n    att\n  );\n};\n\nAcsApi.timeline = function(prd, viewkey, count, name, start, end, morekey) {\n  if (viewkey == undefined) {\n    return;\n  }\n  var params = 'viewkey=' + encodeURIComponent(viewkey) + '&count=' + count;\n  var att = { viewkey: viewkey, prd: prd, name: name };\n  if (start != undefined) {\n    params = params + '&start=' + start;\n    att['start'] = start;\n  }\n  if (end != undefined) {\n    params = params + '&end=' + end;\n    att['end'] = end;\n  }\n  if (morekey != undefined) {\n    params = params + '&skey=' + encodeURIComponent(morekey);\n  }\n\n  AcsConnect.httpPost(\n    'timeline',\n    _acscontext + '/timeline' + _acsextn,\n    params,\n    att\n  );\n};\n\nAcsApi.getBadgeCount = function(nfchannel, smsg) {\n  if (nfchannel == undefined) {\n    return;\n  }\n  var params = 'nfchannel=' + encodeURIComponent(nfchannel);\n  var att = {};\n  if (smsg != undefined) {\n    att['smsg'] = smsg;\n  }\n  AcsConnect.httpPost(\n    'getbadge',\n    _acscontext + '/getbadge' + _acsextn,\n    params,\n    att\n  );\n};\n\nAcsApi.getCrossProductBadgeCount = function(smsg) {\n  var params = 'nfchannel=CPN';\n  var att = {};\n  if (smsg != undefined) {\n    att['smsg'] = smsg;\n  }\n  AcsConnect.httpPost(\n    'getcpnbadge',\n    _acscontext + '/getcpnbadge' + _acsextn,\n    params,\n    att\n  );\n};\nAcsApi.getNotificationList = function(\n  nfchannel,\n  count,\n  morekey,\n  fetchMode,\n  lbrtime,\n  sublist\n) {\n  if (nfchannel == undefined) {\n    return;\n  }\n  if (count == undefined) {\n    count = '30';\n  }\n  var params = 'nfchannel=' + encodeURIComponent(nfchannel) + '&count=' + count;\n  var att = {};\n  if (fetchMode) {\n    att['renderType'] = fetchMode;\n  }\n  if (morekey != undefined) {\n    att['renderType'] = 'more';\n    params = params + '&morekey=' + encodeURIComponent(morekey);\n    if (lbrtime != undefined) {\n      params = params + '&lbrtime=' + lbrtime;\n    }\n  }\n  if (sublist != undefined) {\n    params = params + '&sublist=' + sublist;\n  }\n  AcsConnect.httpPost(\n    'getntfnlist',\n    _acscontext + '/getntfnlist' + _acsextn,\n    params,\n    att\n  );\n};\n/*AcsApi.getNewNotificationList=function(nfchannel,count,skey)\n{\n\tif(nfchannel==undefined) {return;}\n\tif(count==undefined) { count=\"30\"; }\n\tvar params = \"nfchannel=\"+encodeURIComponent(nfchannel)+\"&count=\"+count;\n\tif(skey!=undefined)\n\t{\n\t\tparams = params+\"&skey=\"+encodeURIComponent(skey);\n\t}\n\tvar att = {\"renderType\":\"new\"};\n\tAcsConnect.httpPost(\"getntfnlist\", \"/acs/getntfnlist.do\", params,att);\n}*/\nAcsApi.resetBadgeCount = function(nfchannel) {\n  if (nfchannel == undefined) {\n    return;\n  }\n  var params = 'nfchannel=' + encodeURIComponent(nfchannel);\n  //var att = {\"prd\":prd};\n  AcsConnect.httpPost(\n    'resetbadge',\n    _acscontext + '/resetbadge' + _acsextn,\n    params\n  );\n};\nAcsApi.invoke = function(prd, viewkey, fdk, type, action, data, formObj) {\n  var att = {\n    viewkey: viewkey,\n    prd: prd,\n    fdk: fdk,\n    type: type,\n    action: action\n  };\n  if (formObj != undefined) {\n    ////console.log(formObj);\n    formObj.action = _acscontext + '/invoke' + _acsextn;\n    formObj.target = 'acsif_' + fdk;\n\n    var ifObj = document.createElement('IFRAME');\n    ifObj.name = 'acsif_' + fdk;\n    ifObj.style.display = 'none';\n    //console.log(ifObj);\n    ifObj.onload = function() {\n      AcsConnect.handleHttpPost(\n        'invoke',\n        this.contentWindow.document.body.innerHTML,\n        att\n      );\n    };\n\n    att['restype'] = 'html';\n    for (var k in att) {\n      var input = document.createElement('INPUT');\n      input.type = 'hidden';\n      input.name = k;\n      input.value = att[k];\n      formObj.appendChild(input);\n    }\n    formObj.appendChild(ifObj);\n\n    var d = document.createElement('INPUT');\n    d.type = 'hidden';\n    d.name = 'data';\n    d.value = JSON.stringify(data);\n    formObj.appendChild(d);\n\n    var d = document.createElement('INPUT');\n    d.type = 'hidden';\n    d.name = AcsApi.csrfParam;\n    d.value = AcsUtil.Cookie.getCustomCookie(AcsApi.csrfCookieName);\n    formObj.appendChild(d);\n\n    //console.log(formObj);\n    formObj.submit();\n  } else {\n    var params =\n      'restype=json&type=' +\n      type +\n      '&fdk=' +\n      encodeURIComponent(fdk) +\n      '&action=' +\n      action +\n      '&data=' +\n      encodeURIComponent(JSON.stringify(data));\n    AcsConnect.httpPost(\n      'invoke',\n      _acscontext + '/invoke' + _acsextn,\n      params,\n      att\n    );\n  }\n};\n\nAcsApi.handlePush = function(type, data) {\n  var module = data['module'];\n  var uns = data['uns'];\n  var cpn = data['cpn'];\n  if (uns != undefined) {\n    if (uns.ntfn) {\n      try {\n        var unsNtfn = new UnsNotification(uns.ntfn, uns.prd);\n        AcsCallBack.handleNotification(uns.prd, uns.badgeCount, unsNtfn);\n      } catch (e) {}\n    } else {\n      AcsCallBack.handleNotification(uns.prd, uns.badgeCount);\n    }\n  }\n  if (cpn != undefined) {\n    try {\n      //console.log(cpn);\n      AcsCallBack.handleCrossProductNotification(\n        cpn.prd,\n        cpn.origin,\n        cpn.badgeCount\n      );\n    } catch (e) {}\n  }\n  if (module == 'acs') {\n    for (var viewkey in data.viewlist) {\n      AcsCallBack.handlePushActivity(\n        viewkey,\n        data.viewlist[viewkey],\n        data.activity\n      );\n    }\n  } else if (module == 'poll') {\n    try {\n      AcsCallBack.handlePushPollResult(undefined, undefined, data.pollresult);\n\n      for (var viewkey in data.viewlist) {\n        AcsCallBack.handlePushPollResult(\n          viewkey,\n          data.viewlist[viewkey],\n          data.pollresult\n        );\n      }\n    } catch (e) {\n      //console.log(e);\n    }\n  } else if (module == 'delete') {\n    //console.log(data);\n\n    for (var viewkey in data.viewlist) {\n      AcsCallBack.handlePushDelete(\n        viewkey,\n        data.viewlist[viewkey],\n        data.deldetails\n      );\n    }\n  } else {\n    //console.log(\"Unknown module \"+module);\n    //console.log(data);\n  }\n};\n\nAcsApi.handleCallBack = function(id, data, att) {\n  try {\n    switch (id) {\n      case 'initstream':\n        AcsCallBack.handleInitStream(\n          att.prd,\n          att.viewkey,\n          data.skey,\n          data.morekey,\n          data.sno,\n          data.list\n        );\n        break;\n      case 'showmore':\n        AcsCallBack.handleShowMore(\n          att.prd,\n          att.viewkey,\n          data.morekey,\n          data.list\n        );\n        break;\n      case 'autocorrect':\n        AcsCallBack.handleAutoCorrect(\n          att.prd,\n          att.viewkey,\n          data.skey,\n          data.sno,\n          data.list,\n          data.reset,\n          data.morekey\n        );\n        break;\n      case 'timeline':\n        AcsCallBack.handleTimeline(\n          att.prd,\n          att.viewkey,\n          att.name,\n          att.start,\n          att.end,\n          data.list,\n          data.morekey\n        );\n        break;\n      case 'getbadge':\n        AcsCallBack.handleNotification(data.prd, data.uns, undefined, att.smsg);\n        break;\n      case 'getcpnbadge':\n        for (c in data.cpn) {\n          AcsCallBack.handleCrossProductNotification(\n            data.prd,\n            data.cpn[c].origin,\n            data.cpn[c],\n            att.smsg\n          );\n        }\n        break;\n      case 'getntfnlist':\n        AcsCallBack.handleNotificationList(\n          data.prd,\n          data.ntfnlist,\n          data.nfchannel,\n          data.ntfnbadge,\n          att.renderType,\n          data.reset,\n          data.morekey,\n          data.lbrtime\n        );\n        break;\n      case 'resetbadge':\n        AcsCallBack.handleNotification(data.prd, data.uns);\n        break;\n      case 'invoke':\n        AcsCallBack.handleInvoke(\n          att.viewkey,\n          att.prd,\n          att.fdk,\n          att.type,\n          att.action,\n          data\n        );\n        break;\n      case 'getcomments':\n        AcsCallBack.handleGetComments(\n          att.viewkey,\n          data.fdk,\n          data.cmore,\n          data.prd,\n          data.type,\n          data.comments,\n          data.tccount,\n          att.satt\n        );\n        break;\n    }\n  } catch (e) {\n    throw e;\n  }\n};\n\nAcsApi.handleCallBackError = function(id, expData, att) {\n  try {\n    var aae = new ACSActivityException(att.prd, expData);\n    switch (id) {\n      case 'invoke':\n        AcsCallBack.handleInvokeError(\n          att.viewkey,\n          att.prd,\n          att.fdk,\n          att.type,\n          att.action,\n          aae\n        );\n        break;\n    }\n  } catch (e) {\n    throw e;\n  }\n};\n\nAcsApi.handleProgressiveCallBack = function(init, type, id, data, att) {\n  try {\n    switch (id) {\n      case 'initprogressivestream':\n        if (type == 'chunk') {\n          var ck = data;\n          AcsCallBack.handleInitProgressiveStream(\n            init,\n            att.prd,\n            att.viewkey,\n            ck.chunk,\n            ck.data\n          );\n        } else if (type == 'full') {\n          for (var i = 0; i < data.length; i++) {\n            var ck = data[i];\n            AcsCallBack.handleInitProgressiveStream(\n              i == 0,\n              att.prd,\n              att.viewkey,\n              ck.chunk,\n              ck.data\n            );\n          }\n        }\n        /*else if(type==\"nodata\")\n\t\t\t\t{\n\t\t\t\t\tAcsCallBack.handleInitProgressiveStream(true,att.prd,att.viewkey);\n\t\t\t\t}*/\n        break;\n      case 'showmoreprogressive':\n        if (type == 'chunk') {\n          var ck = data;\n          AcsCallBack.handleShowMoreProgressive(\n            init,\n            att.prd,\n            att.viewkey,\n            ck.chunk,\n            ck.data\n          );\n        } else if (type == 'full') {\n          for (var i = 0; i < data.length; i++) {\n            var ck = data[i];\n            AcsCallBack.handleShowMoreProgressive(\n              i == 0,\n              att.prd,\n              att.viewkey,\n              ck.chunk,\n              ck.data\n            );\n          }\n        }\n        /*else if(type==\"nodata\")\n\t\t\t\t{\n\t\t\t\t\tAcsCallBack.handleShowMoreProgressive(true,att.prd,att.viewkey);\n\t\t\t\t}*/\n        break;\n    }\n  } catch (e) {\n    throw e;\n  }\n};\nAcsApi.localizeString = function(str, params) {\n  return AcsResource.getRealValue(str, params);\n};\nAcsApi.localizeI18NString = function(jsonstr, prd, sfx, onlyDefaultValue) {\n  try {\n    sfx = sfx == undefined ? '' : sfx;\n    var replaceModifiedValues = true;\n    if (onlyDefaultValue != undefined && onlyDefaultValue == true) {\n      replaceModifiedValues = false;\n    }\n    var obj = jsonstr;\n    if (typeof jsonstr == 'string') {\n      obj = JSON.parse(jsonstr);\n    }\n    var iprops = obj.iprops;\n    var params = new Array();\n    var count = 0;\n    for (d in iprops) {\n      if (typeof iprops[d] != 'object') {\n        continue;\n      }\n      var defaultvalue = iprops[d]['defaultvalue'];\n      var fvalue = defaultvalue;\n      if (replaceModifiedValues) {\n        var mvalue = window[prd].I18NString.getString(\n          iprops[d].type,\n          iprops[d].props\n        );\n        if (mvalue != '' && mvalue != undefined) {\n          fvalue = mvalue;\n        }\n      }\n      params[count++] = fvalue;\n    }\n    return AcsResource.getRealValue(obj.istr + sfx, params);\n  } catch (e) {}\n  return jsonstr;\n};\nAcsApi.setLocale = function(lang, rebrand) {\n  AcsResource.fetchResource(lang, rebrand);\n};\n\nAcsCallBack.handleInitProgressiveStream = function(\n  init,\n  prd,\n  viewkey,\n  chunk,\n  data\n) {\n  //console.log(\"GS--\x3e initstream chunk received =\"+chunk);\n\n  if (init) {\n    try {\n      window[prd]._View.init(viewkey);\n    } catch (e) {}\n  }\n\n  if (chunk == undefined) {\n    return;\n  }\n\n  if (chunk == 'seq') {\n    try {\n      var acs_activity = new Activity(data);\n\n      var acroverride =\n        typeof window[acs_activity.getPrd()].Activity !== 'undefined';\n\n      var activity = acroverride\n        ? new window[(acs_activity.getPrd())].Activity(acs_activity)\n        : acs_activity;\n\n      window[acs_activity.getPrd()][acs_activity.getType()].render(\n        'initstream',\n        viewkey,\n        activity,\n        true\n      );\n    } catch (e) {\n      //console.log(e);\n    }\n  } else if (chunk == 'meta') {\n    var viewObj = {\n      morekey: data.morekey,\n      skey: data.skey,\n      sno: data.sno,\n      prd: prd\n    };\n    //console.log(viewObj);\n    AcsApi.viewlist[viewkey] = viewObj;\n    //console.log(\"GS --\x3e feed count = \"+data.size);\n    if (data.size == '0') {\n      try {\n        window[prd]._View.nodata(viewkey);\n      } catch (e) {}\n      return;\n    } else {\n      try {\n        window[prd]._View.completed(viewkey, data.size);\n      } catch (e) {}\n    }\n  }\n};\nAcsCallBack.handleInitStream = function(\n  prd,\n  viewkey,\n  skey,\n  morekey,\n  sno,\n  list\n) {\n  var viewObj = { morekey: morekey, skey: skey, sno: sno, prd: prd };\n  AcsApi.viewlist[viewkey] = viewObj;\n  //console.log(\"init viewkey=\"+viewkey+\" sno=\"+sno);\n  try {\n    window[prd]._View.init(viewkey);\n  } catch (e) {}\n  if (list.length == 0) {\n    try {\n      window[prd]._View.nodata(viewkey);\n    } catch (e) {}\n    return;\n  }\n  for (var i = 0; i < list.length; i++) {\n    try {\n      var acs_activity = new Activity(list[i]);\n\n      var acroverride =\n        typeof window[acs_activity.getPrd()].Activity !== 'undefined';\n\n      var activity = acroverride\n        ? new window[(acs_activity.getPrd())].Activity(acs_activity)\n        : acs_activity;\n\n      window[acs_activity.getPrd()][acs_activity.getType()].render(\n        'initstream',\n        viewkey,\n        activity,\n        true\n      );\n    } catch (e) {}\n  }\n  try {\n    window[prd]._View.completed(viewkey, list.length);\n  } catch (e) {}\n};\n\nAcsCallBack.handleGetComments = function(\n  viewkey,\n  fdk,\n  cmore,\n  prd,\n  type,\n  commentsarr,\n  tccount,\n  satt\n) {\n  var carr = new Array();\n  var acroverride = typeof window[prd].Comment !== 'undefined';\n  //console.log(\"comments=\"+commentsarr.length);\n  for (\n    var i = commentsarr.length - 1;\n    i >= 0;\n    i-- //Change the order if required\n  ) {\n    if (acroverride) {\n      carr.push(new window[prd].Comment(new Comment(commentsarr[i])));\n    } else {\n      carr.push(new Comment(commentsarr[i]));\n    }\n  }\n  window[prd][type].renderComments(viewkey, fdk, cmore, carr, tccount, satt);\n};\n\nAcsCallBack.handleShowMoreProgressive = function(\n  init,\n  prd,\n  viewkey,\n  chunk,\n  data\n) {\n  //console.log(\"GS --\x3e showMore chunk received =\"+chunk);\n\n  if (init) {\n    try {\n      window[prd]._View.initShowMore(viewkey);\n    } catch (e) {}\n  }\n\n  if (chunk == undefined) {\n    return;\n  }\n\n  if (chunk == 'seq') {\n    try {\n      var acs_activity = new Activity(data);\n\n      var acroverride =\n        typeof window[acs_activity.getPrd()].Activity !== 'undefined';\n\n      var activity = acroverride\n        ? new window[(acs_activity.getPrd())].Activity(acs_activity)\n        : acs_activity;\n\n      window[acs_activity.getPrd()][acs_activity.getType()].render(\n        'showmore',\n        viewkey,\n        activity,\n        true\n      );\n    } catch (e) {}\n  } else if (chunk == 'meta') {\n    AcsApi.viewlist[viewkey]['morekey'] = data.morekey;\n    try {\n      window[prd]._View.completedShowMore(viewkey, data.size);\n    } catch (e) {}\n    //console.log(data);\n  }\n};\n\nAcsCallBack.handleShowMore = function(prd, viewkey, morekey, list) {\n  AcsApi.viewlist[viewkey]['morekey'] = morekey;\n\n  try {\n    window[prd]._View.initShowMore(viewkey);\n  } catch (e) {}\n  for (var i = 0; i < list.length; i++) {\n    try {\n      var acs_activity = new Activity(list[i]);\n\n      var acroverride =\n        typeof window[acs_activity.getPrd()].Activity !== 'undefined';\n\n      var activity = acroverride\n        ? new window[(acs_activity.getPrd())].Activity(acs_activity)\n        : acs_activity;\n\n      window[acs_activity.getPrd()][acs_activity.getType()].render(\n        'showmore',\n        viewkey,\n        activity,\n        true\n      );\n    } catch (e) {}\n  }\n  try {\n    window[prd]._View.completedShowMore(viewkey, list.length);\n  } catch (e) {}\n};\nAcsCallBack.handleAutoCorrect = function(\n  prd,\n  viewkey,\n  skey,\n  sno,\n  list,\n  reset,\n  morekey\n) {\n  //console.log(\"handle ac viewkey=\"+viewkey+\" sno=\"+sno);\n  if (\n    AcsApi.viewlist[viewkey]['skey'] == skey &&\n    AcsApi.viewlist[viewkey]['sno'] == sno\n  ) {\n    //console.log(\"auto correct - already in sync\");\n    return;\n  } else {\n    //console.log(\"auto correct - out of sync - corrected sno diff=\"+(sno-AcsApi.viewlist[viewkey][\"sno\"]));\n  }\n\n  if (reset == 'true') {\n    try {\n      //console.log(\"clearing\");\n      window[prd]._View.init(viewkey);\n    } catch (e) {}\n  }\n  //console.log(\"auto correct -received =\"+list.length);\n  //console.log(list);\n  AcsApi.viewlist[viewkey]['skey'] = skey;\n  AcsApi.viewlist[viewkey]['sno'] = sno;\n  if (morekey) {\n    AcsApi.viewlist[viewkey]['morekey'] = morekey;\n  }\n  for (var i = list.length - 1; i >= 0; i--) {\n    try {\n      var acs_activity = new Activity(list[i]);\n\n      var acroverride =\n        typeof window[acs_activity.getPrd()].Activity !== 'undefined';\n\n      var activity = acroverride\n        ? new window[(acs_activity.getPrd())].Activity(acs_activity)\n        : acs_activity;\n\n      window[acs_activity.getPrd()][acs_activity.getType()].render(\n        'autocorrect',\n        viewkey,\n        activity,\n        false\n      );\n    } catch (e) {}\n  }\n};\nAcsCallBack.handleTimeline = function(\n  prd,\n  viewkey,\n  name,\n  start,\n  end,\n  list,\n  morekey\n) {\n  var tlist = new Array();\n  for (var i = 0; i < list.length; i++) {\n    try {\n      var acs_activity = new Activity(list[i]);\n\n      var acroverride =\n        typeof window[acs_activity.getPrd()].Activity !== 'undefined';\n\n      var activity = acroverride\n        ? new window[(acs_activity.getPrd())].Activity(acs_activity)\n        : acs_activity;\n\n      tlist.push(activity);\n    } catch (e) {}\n  }\n  try {\n    window[prd]._View.renderTimeline(viewkey, name, start, end, tlist, morekey);\n  } catch (e) {}\n};\n\nAcsCallBack.handleCrossProductNotification = function(prd, origin, unsBadge) {\n  try {\n    window[prd].Uns.handleCrossProductBadge(origin, unsBadge);\n  } catch (e) {\n    console.log(e);\n  }\n};\nAcsCallBack.handleNotification = function(prd, data, unsNtfn, smsg) {\n  try {\n    window[prd].Uns.handleBadge(data, smsg, unsNtfn);\n    if (unsNtfn != undefined) {\n      if (AcsUtil.getPrd() == undefined || AcsUtil.getRawSid() == undefined) {\n        return;\n      }\n\n      var cownerSid = AcsUtil.Cookie.get(AcsApi.getCkey());\n      if (cownerSid == '' || cownerSid == AcsUtil.getRawSid()) {\n        window[prd].Uns.handleDesktopNotification(unsNtfn);\n        AcsDesktopNotification.setOwnerCookie(\n          AcsApi.getCkey(),\n          AcsUtil.getRawSid(),\n          10000\n        );\n      }\n      //AcsDesktopNotification.show(photo, title, msg, 10);\n    }\n  } catch (e) {}\n};\n\nAcsCallBack.handleNotificationList = function(\n  prd,\n  data,\n  nfchannel,\n  badge,\n  renderType,\n  reset,\n  morekey,\n  lbrtime\n) {\n  try {\n    if (reset && reset == true) {\n      try {\n        window[prd]._View.initNotification(nfchannel);\n      } catch (e) {}\n    }\n    var ntfnList = new Array();\n    for (var i = 0; i < data.length; i++) {\n      ntfnList.push(new UnsNotification(data[i], prd));\n    }\n    if (renderType == 'new') {\n      ntfnList = ntfnList.reverse();\n    }\n    window[prd].Uns.renderNotificationList(\n      renderType,\n      ntfnList,\n      nfchannel,\n      badge,\n      morekey,\n      lbrtime\n    );\n  } catch (e) {}\n};\nAcsCallBack.handleInvoke = function(viewkey, prd, fdk, type, action, data) {\n  try {\n    window[prd][type].handleAction(viewkey, action, fdk, data);\n  } catch (e) {}\n};\n\nAcsCallBack.handleInvokeError = function(viewkey, prd, fdk, type, action, aae) {\n  try {\n    window[prd][type].handleActionError(viewkey, action, fdk, aae);\n  } catch (e) {}\n};\nAcsCallBack.handlePushActivity = function(viewkey, sno, act) {\n  try {\n    var acs_activity = new Activity(act);\n\n    var acroverride =\n      typeof window[acs_activity.getPrd()].Activity !== 'undefined';\n\n    var activity = acroverride\n      ? new window[(acs_activity.getPrd())].Activity(acs_activity)\n      : acs_activity;\n\n    //AcsDesktopNotification.show(\"https://contacts.csez.zohocorpin.com/file?fs=thumb&exp=600&ID=30581\", \"projectacs - Zoho Projects\", acs_activity.getTitle(), 10);\n    window[acs_activity.getPrd()][acs_activity.getType()].renderNotification(\n      viewkey,\n      activity,\n      true\n    );\n\n    if (AcsApi.viewlist[viewkey] == undefined) {\n      return;\n    }\n    //console.log(\"push viewkey=\"+viewkey+\" sno=\"+sno);\n    if (AcsApi.viewlist[viewkey]['sno'] < sno - 1) {\n      //console.log(\"auto correct calling for - \"+viewkey);\n      AcsApi.autoCorrect(viewkey);\n      return;\n    }\n\n    AcsApi.viewlist[viewkey]['skey'] = activity.skey;\n    AcsApi.viewlist[viewkey]['sno'] = sno;\n    window[acs_activity.getPrd()][acs_activity.getType()].render(\n      'push',\n      viewkey,\n      activity,\n      false\n    );\n  } catch (e) {}\n};\n\nAcsCallBack.handlePushPollResult = function(viewkey, sno, pObj) {\n  if (viewkey != undefined && AcsApi.viewlist[viewkey] == undefined) {\n    return;\n  }\n  if (viewkey != undefined && sno != undefined) {\n    AcsApi.viewlist[viewkey]['sno'] = sno;\n  }\n  var pollObj = new PollResult(pObj);\n\n  try {\n    window[pollObj.getPrd()][pollObj.getType()].updatePoll(viewkey, pollObj);\n  } catch (e) {\n    //console.log(e);\n  }\n};\n\nAcsCallBack.handlePushDelete = function(viewkey, sno, dObj) {\n  if (AcsApi.viewlist[viewkey] == undefined) {\n    return;\n  }\n  //console.log(\"push del viewkey=\"+viewkey+\" sno=\"+sno);\n  AcsApi.viewlist[viewkey]['sno'] = sno;\n\n  try {\n    window[dObj.prd][dObj.type].handleDelete(\n      dObj.deltype,\n      viewkey,\n      dObj.fdk,\n      dObj.cfdk\n    );\n  } catch (e) {}\n};\n\nfunction Activity(jsonobj) {\n  this._jobj = jsonobj;\n\n  var commentarr = jsonobj.comments;\n  this.comments = new Array();\n  if (commentarr != undefined) {\n    var acroverride = typeof window[this._jobj.prd].Comment !== 'undefined';\n\n    for (\n      var i = commentarr.length - 1;\n      i >= 0;\n      i-- //Change the order if required\n    ) {\n      if (acroverride) {\n        this.comments.push(\n          new window[this._jobj.prd].Comment(new Comment(commentarr[i]))\n        );\n      } else {\n        this.comments.push(new Comment(commentarr[i]));\n      }\n    }\n  }\n\n  this.getAOwner = function() {\n    return this._jobj.aowner;\n  };\n\n  this.getLAOwner = function() {\n    return this._jobj.laowner;\n  };\n\n  this.getASUsers = function() {\n    return this._jobj.asusers;\n  };\n  this.getCFUsers = function() {\n    return this._jobj.cfusers;\n  };\n\n  this.getLAType = function() {\n    return this._jobj.latype;\n  };\n\n  this.getLATitle = function(sfx, onlyDefaultValue) {\n    if (this._jobj.latitle == undefined) {\n      return;\n    }\n    return AcsApi.localizeI18NString(\n      this._jobj.latitle,\n      this._jobj.prd,\n      sfx,\n      onlyDefaultValue\n    );\n  };\n\n  this.getPrd = function() {\n    return this._jobj.prd;\n  };\n\n  this.getAccFrom = function() {\n    return this._jobj.accFrom;\n  };\n\n  this.isAccFromMobile = function() {\n    return (\n      this._jobj.accFrom != undefined &&\n      (this._jobj.accFrom == 'IOS' || this._jobj.accFrom == 'AND')\n    );\n  };\n  this.isPrivate = function() {\n    return this._jobj.private;\n  };\n\n  this.getFDK = function() {\n    return this._jobj.fdk;\n  };\n\n  this.getSkey = function() {\n    return this._jobj.skey;\n  };\n\n  this.getTitle = function(sfx, onlyDefaultValue) {\n    return AcsApi.localizeI18NString(\n      this._jobj.title,\n      this._jobj.prd,\n      sfx,\n      onlyDefaultValue\n    );\n  };\n\n  this.getType = function() {\n    return this._jobj.type;\n  };\n\n  this.getContent = function() {\n    return this._jobj.contents;\n  };\n\n  this.getTime = function() {\n    return this._jobj.time;\n  };\n\n  this.getTotalComments = function() {\n    return this._jobj.tccount;\n  };\n\n  this.getPoll = function() {\n    return this._jobj.poll;\n  };\n\n  this.getPollResult = function() {\n    return this._jobj.pollresult;\n  };\n\n  this.hasLikes = function() {\n    try {\n      return this._jobj.poll['LIKE']['like'] != undefined;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  this.getLikesCount = function() {\n    try {\n      return this._jobj.pollresult['LIKE']['like'];\n    } catch (e) {}\n    return 0;\n  };\n\n  this.getComments = function() {\n    return this.comments;\n  };\n  this.getCMore = function() {\n    //console.log(\" cmore ------------- \" + this._jobj.cmore);\n    return this._jobj.cmore;\n  };\n\n  this.getAdditionalProperty = function(key) {\n    return this._jobj['ap_' + key];\n  };\n\n  this.getAdditionalPropertyStartsWith = function(startswith) {\n    var obj = {};\n    for (var key in this._jobj) {\n      if (key.indexOf('ap_' + startswith) == 0) {\n        obj[key.replace('ap_', '')] = this._jobj[key];\n      }\n    }\n    return obj;\n  };\n}\n\nfunction ACSActivityException(prd, errobj) {\n  this._prd = prd;\n  this._err = errobj;\n\n  this.getErrorTitle = function() {\n    if (this._err.title == undefined) {\n      return;\n    }\n    return AcsApi.localizeI18NString(this._err.title, this._prd);\n  };\n\n  this.getErrorMessage = function() {\n    if (this._err.message == undefined) {\n      return;\n    }\n    return AcsApi.localizeI18NString(this._err.message, this._prd);\n  };\n\n  this.getAdditionalProperty = function(key) {\n    return this._err['ap_' + key];\n  };\n}\n\nfunction Comment(commentjson) {\n  this._cmt = commentjson;\n  this.getType = function() {\n    return this._cmt.type;\n  };\n\n  this.getAccFrom = function() {\n    return this._cmt.accFrom;\n  };\n\n  this.isAccFromMobile = function() {\n    return (\n      this._cmt.accFrom != undefined &&\n      (this._cmt.accFrom == 'IOS' || this._cmt.accFrom == 'AND')\n    );\n  };\n  this.getCkey = function() {\n    return this._cmt.ckey;\n  };\n\n  this.getCFDK = function() {\n    return this._cmt.cfdk;\n  };\n\n  this.getAt = function() {\n    return this._cmt.at;\n  };\n\n  this.getContent = function() {\n    return this._cmt.contents;\n  };\n\n  this.getPostedBy = function() {\n    return this._cmt.by;\n  };\n  this.getAdditionalProperty = function(key) {\n    return this._cmt['ap.' + key];\n  };\n}\n\nfunction UnsNotification(ntfnjson, prd) {\n  this.prd = prd;\n  this._ntfn = ntfnjson;\n  this.getType = function() {\n    return this._ntfn.type;\n  };\n\n  this.getActionOwner = function() {\n    return this._ntfn.aowner;\n  };\n  this.getRepeatCount = function() {\n    return this._ntfn.repCount;\n  };\n  this.getRepeatUsers = function() {\n    return this._ntfn.repUsers;\n  };\n\n  this.getTime = function() {\n    return this._ntfn.time;\n  };\n\n  this.getSublist = function() {\n    var list = this._ntfn.sublist || [];\n    var subListObjArray = [];\n    for (var i = 0, len = list.length; i < len; i++) {\n      subListObjArray.push(new UnsNotification(list[i], this.prd));\n    }\n    return subListObjArray;\n  };\n\n  this.isNew = function() {\n    if (this._ntfn.isNew == undefined) {\n      return false;\n    } else {\n      return this._ntfn.isNew;\n    }\n  };\n\n  this.getAccFrom = function() {\n    return this._ntfn.accFrom;\n  };\n\n  this.isAccFromMobile = function() {\n    return (\n      this._ntfn.accFrom != undefined &&\n      (this._ntfn.accFrom == 'IOS' || this._ntfn.accFrom == 'AND')\n    );\n  };\n\n  this.getInfo = function(sfx, onlyDefaultValue) {\n    return AcsApi.localizeI18NString(\n      this._ntfn.info,\n      this.prd,\n      sfx,\n      onlyDefaultValue\n    );\n    /*if(this._ntfn.ap_sfx==undefined)\n\t\t  {\n\t\t  return AcsApi.localizeI18NString(this._ntfn.info,this.prd);\n\t\t  }\n\t\t  else\n\t\t  {\n\t\t  return AcsApi.localizeI18NString(this._ntfn.info,this.prd,\".\"+this._ntfn.ap_sfx);\n\t\t  }*/\n  };\n\n  this.getAdditionalProperty = function(key) {\n    return this._ntfn['ap_' + key];\n  };\n  this.getSkey = function() {\n    return this._ntfn.skey;\n  };\n  this.getProperty = function(key) {\n    return this._ntfn[this.getType() + '.' + key];\n  };\n}\n//script for i18n\n\nfunction PollResult(pjson) {\n  this._presult = pjson;\n  this.getFDK = function() {\n    return this._presult.fdk;\n  };\n\n  this.getType = function() {\n    return this._presult.type;\n  };\n\n  this.getPrd = function() {\n    return this._presult.prd;\n  };\n\n  this.getPollName = function() {\n    return this._presult.poll;\n  };\n\n  this.getVotes = function() {\n    return this._presult.votes;\n  };\n}\nAcsResource.init = function() {\n  if (AcsResource.resourceobject == undefined) {\n    AcsResource.resourceobject = new Object();\n  }\n};\nAcsResource.fetchResource = function(lang, rebrand) {\n  var params = 'lang=' + lang;\n  if (rebrand != undefined && rebrand != '') {\n    params += '&rebrand=' + rebrand;\n  }\n  var response = AcsConnect.syncHttpPost(\n    _acscontext + '/getresource' + _acsextn,\n    params\n  );\n  var responseobj = JSON.parse(response);\n  AcsResource.resourceobject = responseobj[0].objString;\n};\nAcsResource.getRealValue = function(key, params) {\n  try {\n    var value = '';\n    if (\n      this.resourceobject['' + key] == undefined ||\n      this.resourceobject['' + key] == null\n    ) {\n      try {\n        if (\n          opener.AcsResource.resourceobject['' + key] == undefined ||\n          opener.AcsResource.resourceobject['' + key] == null\n        ) {\n          value = key;\n        } else {\n          value = opener.AcsResource.resourceobject[key];\n        }\n      } catch (ee) {\n        value = key;\n      }\n    } else {\n      value = this.resourceobject[key];\n    }\n    value = value.replace(/_/g, ' ');\n    if (params == null || params.length == 0) {\n      return value;\n    }\n    value = AcsResource.replaceParams(value, params);\n    return value;\n  } catch (e) {}\n  try {\n    return key.replace(/_/g, ' ');\n  } catch (e) {\n    return '';\n  }\n};\nAcsResource.replaceParams = function(value, params) {\n  for (var i = 0; i < params.length; i++) {\n    var token = params[i];\n    var regexp = new RegExp('\\\\$' + (i + 1), 'g');\n    value = value.replace(regexp, token);\n  }\n  return value;\n};\n\nfunction AcsConnect() {}\n\nAcsConnect.getRequest = function() {\n  var xmlHttp;\n  try {\n    xmlHttp = new ActiveXObject('Msxml2.XMLHTTP');\n  } catch (e) {\n    try {\n      xmlHttp = new ActiveXObject('Microsoft.XMLHTTP');\n    } catch (e) {\n      xmlHttp = false;\n    }\n  }\n  if (!xmlHttp && typeof XMLHttpRequest != 'undefined') {\n    xmlHttp = new XMLHttpRequest();\n  }\n  return xmlHttp;\n};\n\nAcsConnect.httpPost = function(id, url, param, att) {\n  var req = AcsConnect.getRequest();\n  req.open('POST', url, true);\n  req.setRequestHeader(\n    'Content-Type',\n    'application/x-www-form-urlencoded;charset=UTF-8'\n  );\n  var csrf = AcsApi.getCSRF();\n  param = param ? param + '&' + csrf : csrf;\n  req.send(param);\n  req.onreadystatechange = function() {\n    if (req.readyState == 4) {\n      AcsConnect.handleHttpPost(id, req.responseText, att);\n    }\n  };\n};\n\nAcsConnect.httpProgressive = function(id, url, param, att) {\n  var startTime = new Date().getTime();\n  var req = AcsConnect.getRequest();\n  req.open('POST', url, true);\n  req.setRequestHeader(\n    'Content-Type',\n    'application/x-www-form-urlencoded;charset=UTF-8'\n  );\n  var csrf = AcsApi.getCSRF();\n  param = param ? param + '&' + csrf : csrf;\n  req.send(param);\n  var readPos = 0;\n  //var nodata=true;\n\n  req.onreadystatechange = function() {\n    if (req.readyState == 3) {\n      var pdata = '[]';\n      try {\n        //console.log(req.responseText);\n        var txt = req.responseText;\n        if (txt.lastIndexOf(',') == txt.length - 1) {\n          txt = txt.substring(0, txt.length - 1);\n        }\n        pdata = JSON.parse('[' + txt + ']');\n        while (readPos < pdata.length) {\n          AcsApi.handleProgressiveCallBack(\n            readPos == 0,\n            'chunk',\n            id,\n            pdata[readPos],\n            att\n          );\n          //nodata=false;\n          readPos++;\n          if (readPos == 4) {\n            //console.log(\"GS --\x3e time taken first 3 feeds = \"+(new Date().getTime()-startTime));\n          }\n        }\n      } catch (e) {\n        //console.log(e);\n      }\n    } else if (req.readyState == 4) {\n      //console.log(\"GS --\x3e state 4 \"+ req.responseText);\n      try {\n        //console.log(req.responseText);\n        var txt = req.responseText;\n        if (txt.lastIndexOf(',') == txt.length - 1) {\n          txt = txt.substring(0, txt.length - 1);\n        }\n        pdata = JSON.parse('[' + txt + ']');\n        //console.log(\"GS--\x3e s4 total : \"+pdata.length+\" already read s3 : \"+readPos+\" to be read=\"+(pdata.length-readPos));\n        try {\n          var comp_read = 0;\n          while (readPos < pdata.length) {\n            AcsApi.handleProgressiveCallBack(\n              readPos == 0,\n              'chunk',\n              id,\n              pdata[readPos],\n              att\n            );\n            //nodata=false;\n            readPos++;\n            comp_read++;\n            if (readPos == 4) {\n              //console.log(\"GS --\x3e time taken first 3 feeds = \"+(new Date().getTime()-startTime));\n            }\n          }\n          //console.log(\"Progressive Success (\"+readPos+\"/\"+pdata.length+\") chunks read in 4:\"+comp_read);\n        } catch (e1) {\n          AcsApi.handleProgressiveCallBack(true, 'full', id, pdata, att);\n          //console.log(e1);\n        }\n      } catch (e) {\n        //console.log(e);\n      }\n      /*console.log(\"GS --\x3e final nodata=\"+nodata);\n\t\t\tif(nodata)\n\t\t\t{\n\t\t\t\tAcsApi.handleProgressiveCallBack(true,\"nodata\",id,undefined,att);\n\t\t\t\tconsole.log(\"GS --\x3e nodata clearing \"+id);\n\t\t\t}*/\n      //console.log(\"GS --\x3e time taken complete all feeds = \"+(new Date().getTime()-startTime));\n    }\n  };\n};\nAcsConnect.syncHttpPost = function(url, param) {\n  var req = AcsConnect.getRequest();\n  req.open('POST', url, false);\n  req.setRequestHeader(\n    'Content-Type',\n    'application/x-www-form-urlencoded; charset=UTF-8'\n  );\n  req.setRequestHeader('Content-length', param.length);\n  req.setRequestHeader('Connection', 'close');\n  var csrf = AcsApi.getCSRF();\n  param = param ? param + '&' + csrf : csrf;\n  req.send(param);\n  if (req.status == 200) {\n    return req.responseText;\n  }\n};\nAcsConnect.handleHttpPost = function(id, response, att) {\n  try {\n    var responseObj;\n    responseObj = JSON.parse(response);\n    if (responseObj[0].objType == 'error') {\n      AcsApi.handleCallBackError(id, responseObj[0].objString, att);\n    } else {\n      AcsApi.handleCallBack(id, responseObj[0].objString, att);\n    }\n  } catch (e) {\n    //alert(\"error\");\n  }\n};\n\nAcsDesktopNotification = {};\n\nAcsDesktopNotification.hasOwnerAssigned = false;\n\nAcsDesktopNotification.setOwnerCookie = function(name, value, expire) {\n  AcsDesktopNotification.hasOwnerAssigned = true;\n  AcsUtil.Cookie.set(name, value, expire);\n};\n\nAcsDesktopNotification.init = function() {\n  if (_acsie) {\n    document.attachEvent('onclick', AcsDesktopNotification.reqPerm);\n  } else {\n    document.addEventListener('click', AcsDesktopNotification.reqPerm, true);\n  }\n  AcsDesktopNotification.syncOwner();\n};\n\nAcsDesktopNotification.reqPerm = function() {\n  try {\n    if ('webkitNotifications' in window) {\n      if (window.webkitNotifications.checkPermission() != 0) {\n        window.webkitNotifications.requestPermission();\n      }\n    } else if ('Notification' in window) {\n      if (Notification.permission !== 'granted') {\n        Notification.requestPermission();\n      }\n    }\n  } catch (e) {}\n};\n\nAcsDesktopNotification.show = function(photo, title, desc, showtime) {\n  try {\n    try {\n      AcsDesktopNotification.close();\n    } catch (e) {}\n    if ('webkitNotifications' in window) {\n      AcsDesktopNotification.nobj = window.webkitNotifications.createNotification(\n        photo,\n        title,\n        desc\n      );\n      AcsDesktopNotification.nobj.show();\n    } else if ('Notification' in window) {\n      AcsDesktopNotification.nobj = new Notification(title, {\n        dir: 'auto', // No I18N\n        body: desc,\n        tag: 'acs',\n        icon: photo\n      });\n    }\n\n    AcsDesktopNotification.nobj.onclick = function() {\n      try {\n        window.focus();\n        AcsDesktopNotification.close();\n      } catch (e) {}\n    };\n\n    AcsDesktopNotification.closetimer = setTimeout(function() {\n      AcsDesktopNotification.close();\n    }, showtime * 1000);\n  } catch (e) {}\n};\n\nAcsDesktopNotification.close = function() {\n  try {\n    clearTimeout(AcsDesktopNotification.closetimer);\n    if ('webkitNotifications' in window) {\n      AcsDesktopNotification.nobj.cancel();\n    } else if ('Notification' in window) {\n      AcsDesktopNotification.nobj.close();\n    }\n  } catch (e) {}\n};\n\nAcsDesktopNotification.syncOwner = function() {\n  setTimeout(function() {\n    AcsDesktopNotification.syncOwner();\n  }, 4000);\n  if (this.isOwner()) {\n    var cownerSid = AcsUtil.Cookie.get(AcsApi.getCkey());\n    AcsDesktopNotification.setOwnerCookie(AcsApi.getCkey(), cownerSid, 10000);\n  }\n};\n\nAcsDesktopNotification.isOwner = function() {\n  try {\n    if (!AcsDesktopNotification.hasOwnerAssigned) {\n      return true;\n    }\n    if (AcsUtil.getPrd() == undefined || AcsUtil.getRawSid() == undefined) {\n      return false;\n    }\n    var cownerSid = AcsUtil.Cookie.get(AcsApi.getCkey());\n    return cownerSid != '' && cownerSid == AcsUtil.getRawSid();\n  } catch (e) {\n    return false;\n  }\n};\n\nif (_acsie) {\n  window.attachEvent('onbeforeunload', function() {\n    AcsUtil.Cookie.remove(AcsApi.getCkey());\n  });\n} else {\n  window.addEventListener('onbeforeunload', function() {\n    AcsUtil.Cookie.remove(AcsApi.getCkey());\n  });\n}\n\nvar AcsUtil = {\n  getPrd: function() {\n    if (typeof WebMessanger != 'undefined') {\n      return WebMessanger.getPrd();\n    }\n    return WmsLite.prd;\n  },\n  getRawSid: function() {\n    if (typeof WebMessanger != 'undefined') {\n      return WebMessanger.getRawSid();\n    }\n    return WmsLite.rsid;\n  },\n  Cookie: {\n    get: function(key) {\n      if (AcsUtil.getPrd() == undefined) {\n        return;\n      }\n      key = AcsUtil.getPrd() + key;\n      var init = document.cookie.indexOf(key);\n      var cookielength = document.cookie.length;\n      var value = null;\n      if (init != -1) {\n        var keylen = key.length;\n        var beginIndex = init + keylen;\n        value = document.cookie.substr(beginIndex + 1, cookielength);\n        if (value.indexOf(';') != -1) {\n          value = value.substring(0, value.indexOf(';'));\n        }\n      }\n      return (value && decodeURIComponent(value)) || '';\n    },\n    set: function(key, value, expiryTime) {\n      if (\n        typeof value == 'undefined' ||\n        typeof key == 'undefined' ||\n        AcsUtil.getPrd() == undefined\n      ) {\n        return;\n      }\n      key = AcsUtil.getPrd() + key;\n      var expDate = new Date();\n      if (expiryTime == null || expiryTime == '') {\n        expiryTime = 30 * 24 * 60 * 60 * 1000;\n      }\n      expDate.setTime(expDate.getTime() + expiryTime);\n      document.cookie =\n        key +\n        '= ' +\n        encodeURIComponent(value) +\n        ';expires= ' +\n        expDate.toGMTString() +\n        ';path= /';\n      return true;\n    },\n    getCustomCookie: function(key) {\n      var cookie = document.cookie.split('; ');\n      for (var i = 0; i < cookie.length; i++) {\n        var curcookie = cookie[i];\n        var kv = curcookie.split('=');\n        var cookie_name = kv[0];\n        if (cookie_name === key) {\n          return kv[1];\n        }\n      }\n      return '';\n    },\n    remove: function(key) {\n      var cval = AcsUtil.Cookie.get(key);\n      if (cval) {\n        key = AcsUtil.getPrd() + key;\n        var expDate = new Date();\n        document.cookie =\n          key + '=;expires= ' + expDate.toGMTString() + '; path= /';\n      }\n      return cval;\n    }\n  }\n};\n/* eslint-enable */\n"},573:function(n,e,t){t(1303)(t(1781))}}]);